commit 383fe5c8668f63ef21c646b43f48da9fa41aa100
Author: Craig Topper <craig.topper@intel.com>
Date:   Thu May 24 17:59:47 2018 +0000

    sanitizer: Use pre-computed size of struct ustat for Linux
    
    <sys/ustat.h> has been removed from glibc 2.28 by:
    
    commit cf2478d53ad7071e84c724a986b56fe17f4f4ca7
    Author: Adhemerval Zanella <adhemerval.zanella@linaro.org>
    Date: Sun Mar 18 11:28:59 2018 +0800
    
    Deprecate ustat syscall interface
    This patch uses pre-computed size of struct ustat for Linux to fix
    
    https://bugs.llvm.org/show_bug.cgi?id=37418
    
    Patch by H.J. Lu.
    
    Differential Revision: https://reviews.llvm.org/D47281
    
    llvm-svn: 333213

diff --git a/compiler-rt/lib/sanitizer_common/sanitizer_platform_limits_posix.cc b/compiler-rt/lib/sanitizer_common/sanitizer_platform_limits_posix.cc
index 94b8f3f627c..936d8186733 100644
--- a/compiler-rt/lib/sanitizer_common/sanitizer_platform_limits_posix.cc
+++ b/compiler-rt/lib/sanitizer_common/sanitizer_platform_limits_posix.cc
@@ -159,7 +159,6 @@ typedef struct user_fpregs elf_fpregset_t;
 # include <sys/procfs.h>
 #endif
 #include <sys/user.h>
-#include <sys/ustat.h>
 #include <linux/cyclades.h>
 #include <linux/if_eql.h>
 #include <linux/if_plip.h>
@@ -253,7 +252,19 @@ namespace __sanitizer {
 #endif // SANITIZER_LINUX || SANITIZER_FREEBSD
 
 #if SANITIZER_LINUX && !SANITIZER_ANDROID
-  unsigned struct_ustat_sz = sizeof(struct ustat);
+  // Use pre-computed size of struct ustat to avoid <sys/ustat.h> which
+  // has been removed from glibc 2.28.
+#if defined(__aarch64__) || defined(__s390x__) || defined (__mips64) \
+  || defined(__powerpc64__) || defined(__arch64__) || defined(__sparcv9) \
+  || defined(__x86_64__)
+#define SIZEOF_STRUCT_USTAT 32
+#elif defined(__arm__) || defined(__i386__) || defined(__mips__) \
+  || defined(__powerpc__) || defined(__s390__)
+#define SIZEOF_STRUCT_USTAT 20
+#else
+#error Unknown size of struct ustat
+#endif
+  unsigned struct_ustat_sz = SIZEOF_STRUCT_USTAT;
   unsigned struct_rlimit64_sz = sizeof(struct rlimit64);
   unsigned struct_statvfs64_sz = sizeof(struct statvfs64);
 #endif // SANITIZER_LINUX && !SANITIZER_ANDROID
